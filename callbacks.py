from dash import Input, Output, html
from utils.data_loader import load_data
import plotly.graph_objects as go

def register_callbacks(app):
    @app.callback(
        Output('air-output', 'children'),
        Output('co-graph', 'figure'),
        Output('no2-graph', 'figure'),
        Output('o3-graph', 'figure'),
        Output('so2-graph', 'figure'),
        Output('pm2_5-graph', 'figure'),
        Output('pm10-graph', 'figure'),
        Input('city-input', 'value')
    )

    def update_dashboard(city):
        data = load_data(city)

        air_info = html.Div([
            html.H4(f"–°–æ—Å—Ç–æ—è–Ω–∏–µ –≤–æ–∑–¥—É—Ö–∞ –≤ –≥–æ—Ä–æ–¥–µ {data['city_name']} —Å–µ–π—á–∞—Å:", className="card-title"),
            html.H5(f"üè≠ –ö–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—è –æ–∫—Å–∏–¥–∞ —É–≥–ª–µ—Ä–æ–¥–∞ (CO) –≤ –≤–æ–∑–¥—É—Ö–µ: {data['co_curr']} –º–≥/–º¬≥", className="card-subtitle md-4 text-muted"),
            html.H5(f"‚òÅÔ∏é  –ö–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—è –¥–∏–æ–∫—Å–∏–¥–∞ –∞–∑–æ—Ç–∞ (NO2) –≤ –≤–æ–∑–¥—É—Ö–µ: {data['no2_curr']} –º–≥/–º¬≥", className="card-subtitle md-4 text-muted"),
            html.H5(f"‚ö° –ö–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—è –æ–∑–æ–Ω–∞ (O3) –≤ –≤–æ–∑–¥—É—Ö–µ: {data['o3_curr']} –º–≥/–º¬≥", className="card-subtitle md-4 text-muted"),
            html.H5(f"üò∂‚Äçüå´ –ö–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—è —É–≥–ª–µ–∫–∏—Å–ª–æ–≥–æ –≥–∞–∑–∞ (CO‚ÇÇ) –≤ –≤–æ–∑–¥—É—Ö–µ: {data['so2_curr']} ppm", className="card-subtitle md-4 text-muted"),
            html.H5(f"üå™Ô∏è –ö–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—è –º–∏–∫—Ä–æ—Å–∫–æ–ø–∏—á–µ—Å–∫–∏—Ö —á–∞—Å—Ç–∏—Ü –≤ –≤–æ–∑–¥—É—Ö–µ: {data['pm2_5_curr']} –º–∫–≥/–º¬≥", className="card-subtitle md-4 text-muted"),
            html.H5(f"ü™® –ö–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—è –∫—Ä—É–ø–Ω–æ–π –ø—ã–ª–∏ –≤ –≤–æ–∑–¥—É—Ö–µ: {data['pm10_curr']} –º–∫–≥/–º¬≥", className="card-subtitle md-4 text-muted")
        ])

        co_fig = go.Figure(
           data=[go.Scatter(x=data['hours'], y=data['co'], mode='lines+markers', name='–ö–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—è –æ–∫—Å–∏–¥–∞ —É–≥–ª–µ—Ä–æ–¥–∞ (CO)')],
           layout=go.Layout(title='–ö–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—è –æ–∫—Å–∏–¥–∞ —É–≥–ª–µ—Ä–æ–¥–∞ (CO) –≤ –≤–æ–∑–¥—É—Ö–µ –ø–æ —á–∞—Å–∞–º', xaxis_title='–í—Ä–µ–º—è', yaxis_title='(CO), –º–≥/–º¬≥', template='plotly_dark')
        )

        no2_fig = go.Figure(
           data=[go.Scatter(x=data['hours'], y=data['no2'], mode='lines+markers', name='–ö–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—è –¥–∏–æ–∫—Å–∏–¥–∞ –∞–∑–æ—Ç–∞ (NO2)')], 
           layout=go.Layout(title='–ö–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—è –¥–∏–æ–∫—Å–∏–¥–∞ –∞–∑–æ—Ç–∞ (NO2) –≤ –≤–æ–∑–¥—É—Ö–µ –ø–æ —á–∞—Å–∞–º', xaxis_title='–í—Ä–µ–º—è', yaxis_title='(NO2), –º–≥/–º¬≥', template='plotly_dark')
        )

        o3_fig = go.Figure(
           data=[go.Scatter(x=data['hours'], y=data['o3'], mode='lines+markers', name='–ö–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—è –æ–∑–æ–Ω–∞ (O3)')],    
           layout=go.Layout(title='–ö–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—è –æ–∑–æ–Ω–∞ (O3) –≤ –≤–æ–∑–¥—É—Ö–µ –ø–æ —á–∞—Å–∞–º', xaxis_title='–í—Ä–µ–º—è', yaxis_title='(O3), –º–≥/–º¬≥', template='plotly_dark')
        )

        so2_fig = go.Figure(
           data=[go.Scatter(x=data['hours'], y=data['so2'], mode='lines+markers', name='–ö–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—è —É–≥–ª–µ–∫–∏—Å–ª–æ–≥–æ –≥–∞–∑–∞ (CO‚ÇÇ)')],
           layout=go.Layout(title='–ö–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—è —É–≥–ª–µ–∫–∏—Å–ª–æ–≥–æ –≥–∞–∑–∞ (CO‚ÇÇ) –≤ –≤–æ–∑–¥—É—Ö–µ –ø–æ —á–∞—Å–∞–º', xaxis_title='–í—Ä–µ–º—è', yaxis_title='(CO‚ÇÇ), ppm', template='plotly_dark')
        )

        pm2_5_fig = go.Figure(
           data=[go.Scatter(x=data['hours'], y=data['pm2_5'], mode='lines+markers', name='–ö–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—è –º–∏–∫—Ä–æ—Å–∫–æ–ø–∏—á–µ—Å–∫–∏—Ö —á–∞—Å—Ç–∏—Ü')],
           layout=go.Layout(title='–ö–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—è –º–∏–∫—Ä–æ—Å–∫–æ–ø–∏—á–µ—Å–∫–∏—Ö —á–∞—Å—Ç–∏—Ü –≤ –≤–æ–∑–¥—É—Ö–µ', xaxis_title='–í—Ä–µ–º—è', yaxis_title='–º–∫–≥/–º¬≥', template='plotly_dark') 
        )

        pm10_fig = go.Figure(
           data=[go.Scatter(x=data['hours'], y=data['pm10'], mode='lines+markers', name='–ö–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—è –∫—Ä—É–ø–Ω–æ–π –ø—ã–ª–∏')],
           layout=go.Layout(title='–ö–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—è –∫—Ä—É–ø–Ω–æ–π –ø—ã–ª–∏ –≤ –≤–æ–∑–¥—É—Ö–µ', xaxis_title='–í—Ä–µ–º—è', yaxis_title='–º–∫–≥/–º¬≥', template='plotly_dark') 
        )


        return air_info, co_fig, no2_fig, o3_fig, so2_fig, pm2_5_fig, pm10_fig
    
